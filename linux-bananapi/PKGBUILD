# Maintainer: StoneCold <forumi0721[at]gmail[dot]com>

pkgbase="BananaPi"
pkgname=("uboot-bananapi" "linux-bananapi" "linux-bananapi-headers")
_kernelversion=3.4.108
pkgver=3.4.108.20150712.1
pkgrel=1
arch=("armv7h")
url="https://github.com/LeMaker/lemaker-bsp"
license=("GPL")
makedepends=("sunxi-tools")
options=("!strip" "libtool" "staticlibs")
source=(
	"BananaPi_hwpack.tar.xz"
	"BananaPi_extra.tar.xz"
)
md5sums=(
	"SKIP"
	"SKIP"
)

pkgver() {
	local date="$(date +'%Y%m%d')"
	local revision="1"
	local pkgarch="${arch}"
	if [ "${pkgarch}" != "any" ]; then
		pkgarch="${CARCH}"
	fi
	if [ "$(echo "${pkgver}" | cut -d '.' -f 4)" = "${date}" ]; then
		revision="$(echo "${pkgver}" | cut -d '.' -f 5)"
	fi
	for pkg in $(ls "${startdir}"/${pkgname}-${date}.*-${pkgrel}-*.pkg.tar.* 2> /dev/null)
	do
		local prevpkgrev="$(echo "${pkg}" | sed 's/^\(.*\)-\(.*\)\.\(.*\)-\(.*\)-\(.*\)\.pkg\.tar\..*$/\3/g')"
		if [ "${prevpkgrev}" -ge "${revision}" ]; then
			revision="${prevpkgrev}"
		fi
	done

	local prevpkg=$(ls "${startdir}"/${pkgname}-${_kernelversion}.${date}.${revision}-${pkgrel}-${pkgarch}.pkg.tar.* 2> /dev/null)
	if [ ! -z "${prevpkg}" ]; then
		revision="$((${revision} + 1))"
	fi

	echo "${_kernelversion}.${date}.${revision}"
}

package_uboot-bananapi() {
	pkgdesc="U-Boot for ${pkgbase}"
	backup=("boot/uEnv.txt" "boot/script.bin")
	makedepends=("sunxi-tools")
	depends=("sunxi-tools")
	provides=("uboot-sunxi")
	conflicts=("uboot-sunxi")
	install="uboot-${pkgbase,,}.install"
	
	# bootloader
	install -dm755 "${pkgdir}/boot"
	cp -ar "${srcdir}/bootloader/"* "${pkgdir}/boot/"
	install -Dm644 "${srcdir}/kernel/script.bin" "${pkgdir}/boot/"
	bin2fex "${srcdir}/kernel/script.bin" > "${pkgdir}/boot/script.fex"
	install -Dm644 "${srcdir}/uEnv.txt" "${pkgdir}/boot/"
	chmod 644 "${pkgdir}/boot/"*
}

package_linux-bananapi() {
	_k_version=$(ls "${srcdir}/rootfs/lib/modules/")

	pkgdesc="The Linux Kernel and modules - ${basename}"
	#depends=("coreutils" "linux-firmware" "kmod" "mkinitcpio>=0.7")
	depends=("coreutils" "linux-firmware" "kmod")
	optdepends=("crda: to set the correct wireless channels of your country")
	provides=("linux-sun7i" "kernel26" "linux=${_k_version}" "aufs_friendly")
	conflicts=("linux-sun7i" "linux-omap" "linux-imx6" "linux-armada370")
	install="linux-${pkgbase,,}.install"

	# kernel
	install -dm755 "${pkgdir}/boot"
	install -Dm644 "${srcdir}/kernel/uImage" "${pkgdir}/boot/"

	# modules
	install -dm755 "${pkgdir}/usr/lib/modules"
	cp -ar "${srcdir}/rootfs/lib/modules/"* "${pkgdir}/usr/lib/modules/"

	# modules - make room for external modules
	ln -s "../extramodules-${_k_version%.*}-ARCH" "${pkgdir}/usr/lib/modules/${_k_version}/extramodules"

	# modules - add real version for building modules and running depmod from post_install/upgrade
	mkdir -p "${pkgdir}/usr/lib/modules/extramodules-${_k_version%.*}-ARCH"
	echo "${_k_version}" > "${pkgdir}/usr/lib/modules/extramodules-${_k_version%.*}-ARCH/version"

	# extra - modules
	if [ -e "${srcdir}/rootfs/etc/modules" ]; then
		install -dm755 "${pkgdir}/etc"
		install -Dm644 "${srcdir}/rootfs/etc/modules" "${pkgdir}/etc/"
	fi

	# extra - mali.conf
	install -dm755 "${pkgdir}/etc/modules-load.d"
	install -Dm644 "${srcdir}/mali.conf" "${pkgdir}/etc/modules-load.d/"

	# extra - rtl8192-blacklist.conf
	install -dm755 "${pkgdir}/etc/modprobe.d"
	install -Dm644 "${srcdir}/rtl8192-blacklist.conf" "${pkgdir}/etc/modprobe.d/"

	# extra - 50-mali.rules
	install -dm755 "${pkgdir}/etc/udev/rules.d"
	install -Dm644 "${srcdir}/50-mali.rules" "${pkgdir}/etc/udev/rules.d/"

	# extra - modprobe.d
	if [ -e "${srcdir}/rootfs/etc/modprobe.d/" ]; then
		install -dm755 "${pkgdir}/etc/modprobe.d"
		cp -ar "${srcdir}/rootfs/etc/modprobe.d/"* "${pkgdir}/etc/modprobe.d/"
	fi

	# extra - libvecore.so
	if [ -e "${srcdir}/rootfs/lib/libvecore.so" ]; then
		install -dm755 "${pkgdir}/usr/lib"
		install -Dm644 "${srcdir}/rootfs/lib/libvecore.so" "${pkgdir}/usr/lib/"
	fi

	# modify install
	sed -e "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_k_version}/g" -i "${startdir}/linux-${pkgbase,,}.install"
}

package_linux-bananapi-headers() {
	_k_version=$(ls "${srcdir}/rootfs/lib/modules/")

	pkgdesc="Header files and scripts for building modules for linux kernel - ${_desc}"
	depends=("linux-bananapi")
	provides=("linux-headers=${_k_version}")
	conflicts=("linux-sun7i-headers" "linux-headers-omap" "linux-headers-imx6")

	# build link
	install -dm755 "${pkgdir}/usr/lib/modules/${_k_version}"
	ln -s "../../../src/linux-${_k_version}" "${pkgdir}/usr/lib/modules/${_k_version}/build"

	# src
	install -dm755 "${pkgdir}/usr/src/linux-${_k_version}"
	cp -ar "${srcdir}/headers/"* "${pkgdir}/usr/src/linux-${_k_version}"
}
